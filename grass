#!/bin/bash

source ./conf;
# Load setting from default installation path
#source /usr/share/momy/conf

function updateIdle {
    last=`tail -1 $ACTIVELOG | grep "DOWN"`;
    if [ -n "$last" ]; then
        sed '$d' < $ACTIVELOG > "$LOGFOLDER/tmpidle";
        mv "$LOGFOLDER/tmpidle" $ACTIVELOG;
    fi
    echo `date +[%Y-%m-%d\ %H:%M:%S]` "DOWN" >> $ACTIVELOG;
}

function updateActiveLog {
    idle=`xprintidle`
    if [ -n "$idle" ] && [ "$idle" -lt "$IDLETIME" ]
    then
        if $isIdle
        then
            echo `date +[%Y-%m-%d\ %H:%M:%S]` "UP" >> $ACTIVELOG;
            updateIdle;
        else
            updateIdle;
        fi
        isIdle=false
    else
        isIdle=true
    fi
}

function lateDownTime {
    last=`tail -1 $LOGFILE | grep "DOWN"`;
    if [ -n "$last" ]; then
        sed '$d' < $LOGFILE > "$LOGFOLDER/tmpmomy";
        mv "$LOGFOLDER/tmpmomy" $LOGFILE;
    fi
    echo `date +[%Y-%m-%d\ %H:%M:%S]` "DOWN" >> $LOGFILE;
}

function postLog {
    log=`cat $LOGFILE`;
    res=0;
    res=`wget --post-data "user=$USER&device=$DEVICE&file=system&log=$log" -O - -q $POSTSESSIONURL`
    if [ "$res" != "BRAVO" ]; then
        echo `date +[%Y-%m-%d\ %H:%M:%S]` "ERROR POSTING SESSION LOG" >> $GRASSLOG;
    else
        #log should now be deleted, except for the lines with current session.
        cat $LOGFILE | tail -2 > "$LOGFOLDER/tmpMomyLog";
        mv "$LOGFOLDER/tmpMomyLog" $LOGFILE
    fi
}

function postActiveLog {
    log=`cat $ACTIVELOG`;
    res=0;
    res=`wget --post-data "user=$USER&device=$DEVICE&file=active&log=$log" -O - -q $POSTSESSIONURL`
    if [ "$res" != "BRAVO" ]; then
        echo `date +[%Y-%m-%d\ %H:%M:%S]` "ERROR POSTING ACTIVE LOG" >> $GRASSLOG;
    else
        #log should now be deleted, except for the two last lines
        cat $ACTIVELOG | tail -2 > "$LOGFOLDER/tmpActiveLog";
        mv "$LOGFOLDER/tmpActiveLog" $ACTIVELOG
    fi
}

if [ "$1" = "stop" ];
then
        lateDownTime;
        updateActiveLog;
        exit;
fi

if [ "$1" = "start" ];
then
    isIdle=false
    export DISPLAY=:0.0
    # if xauthority required, xauthority must exist:
    if [ -f /home/$SUDOER/.Xauthority ]; then
        export XAUTHORITY=/home/$SUDOER/.Xauthority
    fi

    echo `date +[%Y-%m-%d\ %H:%M:%S]` "UP" >> $LOGFILE;
    echo `date +[%Y-%m-%d\ %H:%M:%S]` "UP" >> $ACTIVELOG;

    while true
    do
        sleep $CHECKTIME;
        lateDownTime;
        updateActiveLog;
        postLog;
        postActiveLog;
    done
fi

