extends page
block content
  h1 Session Statistics
  .row
    #sessionList.pull-left.well
      b Session List:
      - each session in sessions
        p
          | #{session.device}@#{session.ip}
          br/
          | #{session.up}
          br/
          | #{session.down} (#{session.time})

    p#dayTotals.pull-right.well
       b Day totals: 
       br/

    p.pull-right.well 
        b Total Time:
        br/
        | #{totalSecs}

    p#pie.pull-right.well
        b Devices usage:
        br/

    p.pull-right.well
        b Week Totals:
        br/
        | #{weekTotals}

  style
    .chart2{
      margin: 5px;
      font: 10px sans-serif;
    }
    .chart2 rect{
      stroke: whiteSmoke;
      fill: goldenrod;
    }

  script
    var w = 200,
        h = 200,
        r = 100,
        color = d3.scale.category20c();     //builtin range of colors
                 
        data = !{JSON.stringify(devices)};
                                                    
    var vis = d3.select("#pie")
                .append("svg:svg")
                .data([data])
                    .attr("width", w)           
                    .attr("height", h)
                    .append("svg:g")                //make a group to hold our pie chart
                    .attr("transform", "translate(" + r + "," + r + ")")    
                     
    var arc = d3.svg.arc()
            .outerRadius(r);
             
    var pie = d3.layout.pie()          
                .value(function(d) { return d.value; });
             
    var arcs = vis.selectAll("g.slice")   
                .data(pie)                   
                .enter()            
                .append("svg:g")   
                .attr("class", "slice");
                                                                 
    arcs.append("svg:path")
        .attr("fill", function(d, i) { return color(i); } ) 
        .attr("d", arc);                                   

    arcs.append("svg:text")                           
        .transition()
        .duration(500)
        .attr("transform", function(d) {                 
                    //we have to make sure to set these before calling arc.centroid
                    d.innerRadius = 0;
                    d.outerRadius = r;
                    return "translate(" + arc.centroid(d) + ")";    
                })
        .attr("text-anchor", "middle")                 
        .text(function(d, i) { return data[i].label; });


    /* bar graph */

    function humanizeTime (secs) {
      if(secs < 60) return secs+' secs.';
      var min = Math.round((secs / 60), 0);
      if(min < 60) return min + ' mins';
      var hour = Math.round((min / 60), 0);
      min = min % 60;
      if(min == 0) return hour + ' hours';
      return hour + ' hours, ' + min + ' mins';
    }
    
    var dayTotals = [#{dayTotals}];
    var maxDay = Math.max(#{dayTotals});
    var weekDays = ['Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Sunday'];
    console.log(maxDay);

    var labelsWidth = 65;
    var chart,
        width = 400,
        bar_height = 20,
        margins = 2,
        height = (bar_height+margins) * dayTotals.length;

    var x = d3.scale.linear()
                .domain([0, d3.max(dayTotals)])
                .range([0, width - labelsWidth]);
    var y = d3.scale.ordinal()
                .domain(dayTotals)
                .rangeBands([0, height]);

    chart = d3.select("#dayTotals")
              .append('svg')
              .attr('class', 'chart2')
              .attr('width', width)
              .attr('height', height);

    chart.selectAll("rect")
        .data(dayTotals)
        .enter().append("rect")
        .attr("y", y)
        .attr("height", y.rangeBand())
        .attr("x", function(){ return labelsWidth;})
        .transition()
        .duration(1000)
            .attr("width", x);

    chart.selectAll("text.day")
        .data(dayTotals).enter().append("text")
        .attr("x", function(d){ return labelsWidth - 5; })
        .attr("y", function(d){ return y(d)+y.rangeBand()/2;})
        .attr("dy", ".36em")
        .attr("text-anchor", "end")
        .attr('fill', 'dimgray')
        .text(function(d,i){ return weekDays[i]; });

    chart.selectAll("text.time")
        .data(dayTotals)
        .enter().append("text")
        .attr('opacity', 0)
        .attr("x", function(d){ 
            if(x(d) < 100)
                return x(d) + labelsWidth + 5;
            else
                return x(d) + labelsWidth - 5;})
        .attr("y", function(d){ return y(d)+y.rangeBand()/2;})
        .attr("dy", ".36em")
        .attr("text-anchor", function(d){
            if(x(d) < 100)
                return "begining";
            else 
                return "end";})
        .text(function(d,i){ return '(' + humanizeTime(d) + ')';})
        .transition()
        .duration(700)
        .delay(600)
            .attr('opacity', 1);
